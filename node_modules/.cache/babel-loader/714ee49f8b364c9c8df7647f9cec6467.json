{"ast":null,"code":"import axios from 'axios';\nimport { ApiUrl as apiUrl } from '../config';\nimport { Cookie, authHeader } from '../helpers';\nexport const userService = {\n  registerUser,\n  verifyEmail,\n  login,\n  getUserProfile,\n  forgotPass,\n  recoverPass,\n  logout,\n  changePassword\n};\n\nfunction getUserProfile() {\n  const requestOptions = {\n    method: 'get',\n    url: \"\".concat(apiUrl, \"/api/profile\"),\n    headers: authHeader()\n  };\n  console.log('request', requestOptions);\n  return axios(requestOptions).then(response => {\n    return responseHandler(response);\n  }).catch(err => {\n    return responseHandler(err.response);\n  });\n}\n\nfunction logout() {\n  // remove user from cookies to log user out\n  Cookie.delete('user');\n  return true;\n}\n\nfunction registerUser(email, password, firstName, lastName) {\n  const requestOptions = {\n    method: 'post',\n    url: \"\".concat(apiUrl, \"/api/register\"),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      email: email,\n      password: password,\n      firstName: firstName,\n      lastName: lastName\n    }\n  };\n  return axios(requestOptions).then(response => {\n    return responseHandler(response);\n  }).catch(err => {\n    return responseHandler(err.response);\n  });\n}\n\nfunction login(email, password) {\n  const requestOptions = {\n    method: 'post',\n    url: \"\".concat(apiUrl, \"/api/login\"),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      email: email,\n      password: password\n    }\n  };\n  return axios(requestOptions).then(response => {\n    Cookie.set(\"user\", JSON.stringify({\n      token: response.data.token\n    }), 1);\n    return responseHandler(response);\n  }).catch(err => {\n    return responseHandler(err.response);\n  });\n}\n\nfunction verifyEmail(email, code) {\n  const requestOptions = {\n    method: 'post',\n    url: \"\".concat(apiUrl, \"/api/verify\"),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      email: email,\n      code: code\n    }\n  };\n  return axios(requestOptions).then(response => {\n    return responseHandler(response);\n  }).catch(err => {\n    return responseHandler(err.response);\n  });\n}\n\nfunction forgotPass(email) {\n  const requestOptions = {\n    method: 'post',\n    url: \"\".concat(apiUrl, \"/api/forgot-pass\"),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      email: email\n    }\n  };\n  return axios(requestOptions).then(response => {\n    return responseHandler(response);\n  }).catch(err => {\n    return responseHandler(err.response);\n  });\n}\n\nfunction recoverPass(email, code, password) {\n  const requestOptions = {\n    method: 'post',\n    url: \"\".concat(apiUrl, \"/api/recover-pass\"),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      email: email,\n      password: password,\n      code: code\n    }\n  };\n  return axios(requestOptions).then(response => {\n    return responseHandler(response);\n  }).catch(err => {\n    return responseHandler(err.response);\n  });\n}\n\nfunction changePassword(oldPassword, newPassword) {\n  const requestOptions = {\n    method: 'post',\n    url: \"\".concat(apiUrl, \"/api/change-password\"),\n    headers: authHeader(),\n    data: {\n      current: oldPassword,\n      newPassword: newPassword\n    }\n  };\n  return axios(requestOptions).then(response => {\n    return responseHandler(response);\n  }).catch(err => {\n    return responseHandler(err.response);\n  });\n}\n\nfunction responseHandler(response) {\n  if (response.status === 401) {\n    return {\n      data: \"Unauthorized Request\"\n    };\n  } else {\n    return response;\n  }\n}","map":{"version":3,"sources":["/home/techkopra-arihant/Arihant/register-using-react-redux/register-using-react-redux/src/services/user.service.js"],"names":["axios","ApiUrl","apiUrl","Cookie","authHeader","userService","registerUser","verifyEmail","login","getUserProfile","forgotPass","recoverPass","logout","changePassword","requestOptions","method","url","headers","console","log","then","response","responseHandler","catch","err","delete","email","password","firstName","lastName","data","set","JSON","stringify","token","code","oldPassword","newPassword","current","status"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ApiUrl as apiUrl } from '../config';\nimport {Cookie, authHeader} from '../helpers'\n\nexport const userService = {\n    registerUser,\n    verifyEmail,\n    login,\n    getUserProfile,\n    forgotPass,\n    recoverPass,\n    logout,\n    changePassword\n};\n\nfunction getUserProfile() {\n    const requestOptions = {\n        method: 'get',\n        url: `${apiUrl}/api/profile`,\n        headers: authHeader()\n    }\n    console.log('request',requestOptions)\n    return axios(requestOptions)\n    .then((response) => {\n        return responseHandler(response);\n    })\n    .catch((err) => {\n        return responseHandler(err.response);\n    })\n}\n\nfunction logout() {\n    // remove user from cookies to log user out\n    Cookie.delete('user');\n    return true;\n}\n\nfunction registerUser(email, password, firstName, lastName) {\n\n    const requestOptions = {\n        method: 'post',\n        url: `${apiUrl}/api/register`,\n        headers:{\n            \"Content-Type\": \"application/json\"\n        },\n        data: {\n            email : email,\n            password : password,\n            firstName: firstName,\n            lastName: lastName\n        }\n    };\n\n    return axios(requestOptions)\n        .then((response) => {\n            return responseHandler(response);\n        })\n        .catch((err) => {\n            return responseHandler(err.response);\n        })\n}\n\nfunction login(email, password) {\n\n    const requestOptions = {\n        method: 'post',\n        url: `${apiUrl}/api/login`,\n        headers:{\n            \"Content-Type\": \"application/json\"\n        },\n        data: {\n            email : email,\n            password : password\n        }\n    };\n\n    return axios(requestOptions)\n        .then((response) => {\n            Cookie.set(\"user\", JSON.stringify({ token: response.data.token }), 1);\n            return responseHandler(response);\n        })\n        .catch((err) => {\n            return responseHandler(err.response);\n        })\n}\n\nfunction verifyEmail(email, code) {\n\n    const requestOptions = {\n        method: 'post',\n        url: `${apiUrl}/api/verify`,\n        headers:{\n            \"Content-Type\": \"application/json\"\n        },\n        data: {\n            email : email,\n            code : code\n        }\n    };\n\n    return axios(requestOptions)\n        .then((response) => {\n            return responseHandler(response);\n        })\n        .catch((err) => {\n            return responseHandler(err.response);\n        })\n}\n\nfunction forgotPass(email) {\n\n    const requestOptions = {\n        method: 'post',\n        url: `${apiUrl}/api/forgot-pass`,\n        headers:{\n            \"Content-Type\": \"application/json\"\n        },\n        data: {\n            email : email\n        }\n    };\n\n    return axios(requestOptions)\n        .then((response) => {\n            return responseHandler(response);\n        })\n        .catch((err) => {\n            return responseHandler(err.response);\n        })\n}\n\nfunction recoverPass(email, code, password) {\n\n    const requestOptions = {\n        method: 'post',\n        url: `${apiUrl}/api/recover-pass`,\n        headers:{\n            \"Content-Type\": \"application/json\"\n        },\n        data: {\n            email : email,\n            password : password,\n            code: code\n        }\n    };\n\n    return axios(requestOptions)\n        .then((response) => {\n            return responseHandler(response);\n        })\n        .catch((err) => {\n            return responseHandler(err.response);\n        })\n}\n\nfunction changePassword(oldPassword,newPassword) {\n\n    const requestOptions = {\n        method: 'post',\n        url: `${apiUrl}/api/change-password`,\n        headers:authHeader(),\n        data: {\n            current : oldPassword,\n            newPassword : newPassword\n        }\n    };\n\n    return axios(requestOptions)\n        .then((response) => {\n            return responseHandler(response);\n        })\n        .catch((err) => {\n            return responseHandler(err.response);\n        })\n}\n\nfunction responseHandler(response){\n    if(response.status === 401){\n        return { data: \"Unauthorized Request\" };\n    }else{\n        return response;\n    }\n}"]},"metadata":{},"sourceType":"module"}